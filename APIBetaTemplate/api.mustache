{{#operations}}//
// {{classname}}.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

extension {{projectName}}API {

    {{#description}}
    /** {{description}} */{{/description}}
    struct {{classname}} {
    {{#operation}}
        /**
         {{#summary}}
         {{{summary}}}
         {{/summary}}
         - {{httpMethod}} {{path}}{{#notes}}
         - {{{notes}}}{{/notes}}{{#subresourceOperation}}
         - subresourceOperation: {{subresourceOperation}}{{/subresourceOperation}}{{#defaultResponse}}
         - defaultResponse: {{defaultResponse}}{{/defaultResponse}}{{#authMethods}}
         - authMethods: {{authMethods}}{{/authMethods}}{{#responseHeaders}}
         - responseHeaders: {{responseHeaders}}{{/responseHeaders}}{{#examples}}
         - examples: {{{examples}}}{{/examples}}{{#externalDocs}}
         - externalDocs: {{externalDocs}}{{/externalDocs}}{{#hasParams}}
         {{/hasParams}}{{#allParams}}
         :param: {{paramName}} ({{#isFormParam}}form{{/isFormParam}}{{#isQueryParam}}query{{/isQueryParam}}{{#isPathParam}}path{{/isPathParam}}{{#isHeaderParam}}header{{/isHeaderParam}}{{#isBodyParam}}body{{/isBodyParam}}) {{description}}{{/allParams}}

         :returns: Promise<Response<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}>> {{description}}
         */
        func {{operationId}}({{#allParams}}{{^secondaryParam}}{{paramName}} {{/secondaryParam}}{{paramName}}: {{{dataType}}}{{^required}}?{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) -> Endpoint<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}> {

            {{^pathParams}}let{{/pathParams}}{{#pathParams}}{{^secondaryParam}}var{{/secondaryParam}}{{/pathParams}} path = "{{path}}"{{#pathParams}}
            path = path.stringByReplacingOccurrencesOfString("{{=<% %>=}}{<%paramName%>}<%={{ }}=%>", withString: "\({{paramName}})", options: .LiteralSearch, range: nil){{/pathParams}}

            // TODO: Write reflection-based encode-to-json function
            {{#bodyParam}}
            let parameters = {{paramName}}{{^required}}?{{/required}}.encode() as? [String:AnyObject]{{/bodyParam}}{{^bodyParam}}
            let nillableParameters: [String:AnyObject?] = {{^queryParams}}[:]{{/queryParams}}{{#queryParams}}{{^secondaryParam}}[{{/secondaryParam}}
                "{{paramName}}": {{paramName}}{{#hasMore}},{{/hasMore}}{{^hasMore}}
            ]{{/hasMore}}{{/queryParams}}
            let parameters = nillableParameters{{/bodyParam}}

            let config = EndpointConfig(method: "{{httpMethod}}", parameters: parameters)


             return Endpoint<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}>({{projectName}}API(), path: "{{path}}", config: config)
        }
    {{/operation}}
    }

}

{{/operations}}
