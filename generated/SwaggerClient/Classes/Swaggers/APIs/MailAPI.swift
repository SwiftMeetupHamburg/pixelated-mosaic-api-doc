//
// MailAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    class MailAPI: APIBase {
    
        /**
         
         Gets mail details
         
         - GET /mail/{ident}
         - Return details of a specific mail\n
         - examples: [{example={
  "tags" : [ "aeiou" ],
  "ident" : { },
  "mailBox" : "aeiou",
  "status" : [ "aeiou" ],
  "textPlainBody" : "aeiou"
}, contentType=application/json}]
         
         :param: ident (path) Identifier of mail

         :returns: Promise<Response<Mail>> 
         */
        func mailIdentGet(ident ident: String) -> RequestBuilder<Mail> {
            var path = "/mail/{ident}"
            path = path.stringByReplacingOccurrencesOfString("{ident}", withString: "\(ident)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Mail>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Deletes a mail
         
         - DELETE /mail/{ident}
         - On first call it moves the mail into the 'trash' folder, on second call the mail is deleted.\n
         
         :param: ident (path) Identifier of mail

         :returns: Promise<Response<Void>> 
         */
        func mailIdentDelete(ident ident: String) -> RequestBuilder<Void> {
            var path = "/mail/{ident}"
            path = path.stringByReplacingOccurrencesOfString("{ident}", withString: "\(ident)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Changes tags of a mail
         
         - POST /mail/{ident}/tags
         - Changes the list of tags of a specific mail\n
         - examples: [{example={
  "tags" : [ "aeiou" ],
  "ident" : { },
  "mailBox" : "aeiou",
  "status" : [ "aeiou" ],
  "textPlainBody" : "aeiou"
}, contentType=application/json}]
         
         :param: ident (path) Identifier of mail
         :param: newtags (body) List of tags

         :returns: Promise<Response<Mail>> 
         */
        func mailIdentTagsPost(ident ident: String, newtags: MailTagsEnvelope) -> RequestBuilder<Mail> {
            var path = "/mail/{ident}/tags"
            path = path.stringByReplacingOccurrencesOfString("{ident}", withString: "\(ident)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let parameters = newtags.encode() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Mail>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: url, parameters: parameters, isBody: true)
        }
    
    }
}
